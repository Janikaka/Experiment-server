{
    "swagger": "2.0",
    "paths": {
        "/applications/{appid}/clients/{clientid}/experiments": {
            "get": {
                "summary": "Get clients current experiments",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Experiment"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "clientid",
                        "type": "integer",
                        "description": "id of the client"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "client"
                ]
            }
        },
        "/applications/{appid}/clients": {
            "post": {
                "summary": "Create new client",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/client"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Newclient"
                        },
                        "in": "body",
                        "name": "client",
                        "required": true,
                        "description": "client to create"
                    }
                ],
                "tags": [
                    "client"
                ]
            },
            "get": {
                "summary": "Get all clients",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/client"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "description": "Gets all clients from the database",
                "tags": [
                    "client"
                ]
            }
        },
        "/applications/{id}/configurationkeys": {
            "post": {
                "summary": "Create new configuration-key",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationKey"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NewConfigurationKey"
                        },
                        "in": "body",
                        "name": "configurationkey",
                        "required": true,
                        "description": "Conf.key to create"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            },
            "get": {
                "summary": "Get configurationkeys of one application",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ConfigurationKey"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            },
            "delete": {
                "summary": "Delete all configuration-keys of one app",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            }
        },
        "/applications/{appid}/clients/{clientid}": {
            "get": {
                "summary": "Get one client",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/client"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "clientid",
                        "type": "integer",
                        "description": "id of the client"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "client"
                ]
            },
            "delete": {
                "summary": "Delete one client",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "clientid",
                        "type": "integer",
                        "description": "id of the client"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "client"
                ]
            }
        },
        "/applications/{id}/data": {
            "get": {
                "summary": "Get all configurationkeys and rangeconstraints of one application",
                "responses": {
                    "200": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Application"
                                }
                            ],
                            "properties": {
                                "configurationkeys": {
                                    "items": {
                                        "$ref": "#/definitions/ConfigurationKey"
                                    },
                                    "type": "array"
                                },
                                "rangeconstraints": {
                                    "items": {
                                        "$ref": "#/definitions/RangeConstraint"
                                    },
                                    "type": "array"
                                },
                                "exclusionconstraints": {
                                    "items": {
                                        "$ref": "#/definitions/ExclusionConstraint"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "application"
                ]
            }
        },
        "/applications/{appid}/experiments/{expid}/experimentgroups/{expgroupid}": {
            "get": {
                "summary": "Show one experimentgroup metadata. This is intended to be used as interface for analytic tools.",
                "responses": {
                    "200": {
                        "schema": {
                            "properties": {
                                "clients": {
                                    "items": {
                                        "$ref": "#/definitions/client"
                                    },
                                    "type": "array"
                                },
                                "dataitems": {
                                    "items": {
                                        "$ref": "#/definitions/DataItem"
                                    },
                                    "type": "array"
                                },
                                "configurations": {
                                    "items": {
                                        "$ref": "#/definitions/Configuration"
                                    },
                                    "type": "array"
                                },
                                "experimentgroup": {
                                    "items": {
                                        "$ref": "#/definitions/ExperimentGroup"
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "id of the experiment"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expgroupid",
                        "type": "integer",
                        "description": "id of the experimentgroup"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            },
            "delete": {
                "summary": "Delete experimentgroup from one experiment",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "id of the experiment"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expgroupid",
                        "type": "integer",
                        "description": "id of the experimentgroup"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            }
        },
        "/applications/{appid}/clients/{clientid}/configurations": {
            "get": {
                "summary": "Get clients currenct configurations",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Configuration"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "clientid",
                        "type": "integer",
                        "description": "id of the client"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "client"
                ]
            }
        },
        "/operators": {
            "get": {
                "summary": "Get available operators",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Operator"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "operators"
                ]
            }
        },
        "/applications/{appid}/exclusionconstraints/{ecid}": {
            "get": {
                "summary": "Get one exclusionconstraint",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExclusionConstraint"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ecid",
                        "type": "integer",
                        "description": "id of the exclusionconstraint"
                    }
                ],
                "tags": [
                    "exclusion-constraints"
                ]
            },
            "delete": {
                "summary": "Delete one exclusionconstraint",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ecid",
                        "type": "integer",
                        "description": "id of the exclusionconstraint"
                    }
                ],
                "tags": [
                    "exclusion-constraints"
                ]
            }
        },
        "/applications/{id}": {
            "get": {
                "summary": "Get one application",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Application"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "application"
                ]
            },
            "delete": {
                "summary": "Delete one application",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "description": "id of the application"
                    }
                ],
                "tags": [
                    "application"
                ]
            }
        },
        "/applications/{appid}/experiments/{expid}/experimentgroups": {
            "get": {
                "summary": "List experimentgroups of one Experiment",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ExperimentGroup"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "Id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "Id of the Experiment"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            }
        },
        "/applications": {
            "post": {
                "summary": "Create new application",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Application"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NewApplication"
                        },
                        "in": "body",
                        "name": "application",
                        "required": true,
                        "description": "Application to create"
                    }
                ],
                "tags": [
                    "application"
                ]
            },
            "get": {
                "summary": "Get all applications",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Application"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "application"
                ]
            }
        },
        "/applications/{appid}/exclusionconstraints": {
            "post": {
                "summary": "Create new exclusionconstraint to application",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExclusionConstraint"
                        },
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NewExclusionConstraint"
                        },
                        "in": "body",
                        "name": "exclusionconstraint",
                        "required": true,
                        "description": "exclusionconstraint to create"
                    }
                ],
                "tags": [
                    "exclusion-constraints"
                ]
            },
            "get": {
                "summary": "Get exclusionconstraints of one application",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ExclusionConstraint"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    }
                ],
                "tags": [
                    "exclusion-constraints"
                ]
            }
        },
        "/applications/{appid}/configurationkeys/{ckid}/rangeconstraints": {
            "post": {
                "summary": "Create new rangeconstraint",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RangeConstraint"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NewRangeConstraint"
                        },
                        "in": "body",
                        "name": "rangeconstraint",
                        "required": true,
                        "description": "Rangeconstraint to create"
                    }
                ],
                "tags": [
                    "range-constraints"
                ]
            },
            "get": {
                "summary": "Get rangeconstraints of one configurationkey",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RangeConstraint"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    }
                ],
                "tags": [
                    "range-constraints"
                ]
            },
            "delete": {
                "summary": "Delete all rangeconstraints of one configurationkey",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    }
                ],
                "tags": [
                    "range-constraints"
                ]
            }
        },
        "/applications/{appid}/experiments/{expid}/clients": {
            "get": {
                "summary": "List all clients for one experiment",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/client"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "id of the experiment"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            }
        },
        "/applications/{appid}/configurationkeys/{ckid}/rangeconstraints/{rcid}": {
            "delete": {
                "summary": "Delete one rangeconstraint",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "rcid",
                        "type": "integer",
                        "description": "id of the rangeconstraint"
                    }
                ],
                "tags": [
                    "range-constraints"
                ]
            }
        },
        "/applications/{appid}/configurationkeys/{ckid}": {
            "put": {
                "summary": "Modify excisting configuration key",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationKey"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationKey"
                        },
                        "in": "body",
                        "name": "configurationkey",
                        "required": true,
                        "description": "Configurationkey to modify"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            },
            "get": {
                "summary": "Get one configurationkey",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationKey"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            },
            "delete": {
                "summary": "Delete one configurationkey",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "ckid",
                        "type": "integer",
                        "description": "id of the configurationkey"
                    }
                ],
                "tags": [
                    "configuration-keys"
                ]
            }
        },
        "/applications/{appid}/experiments": {
            "post": {
                "summary": "Create new experiment",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Experiment"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NewExperiment"
                        },
                        "in": "body",
                        "name": "experiment",
                        "required": true,
                        "description": "Experiment to create"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            },
            "get": {
                "summary": "List all experiments",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Experiment"
                            },
                            "type": "array"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            }
        },
        "/applications/{appid}/experiments/{expid}": {
            "get": {
                "summary": "Get one experiment",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Experiment"
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "id of the experiment"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            },
            "delete": {
                "summary": "Delete one experiment",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "appid",
                        "type": "integer",
                        "description": "id of the Application"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "expid",
                        "type": "integer",
                        "description": "id of the experiment"
                    }
                ],
                "tags": [
                    "experiments"
                ]
            }
        }
    },
    "definitions": {
        "RangeConstraint": {
            "allOf": [
                {
                    "$ref": "#/definitions/NewRangeConstraint"
                }
            ],
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Configuration": {
            "required": [
                "id",
                "experimentgroup_id",
                "key",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "experimentgroup_id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": [
                        "integer",
                        "string",
                        "boolean"
                    ]
                }
            },
            "type": "object"
        },
        "NewConfigurationKey": {
            "required": [
                "name",
                "type",
                "application_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NewExclusionConstraint": {
            "required": [
                "first_operator_id",
                "first_value_a",
                "first_value_b",
                "second_configurationkey_id",
                "second_operator_id",
                "second_value_a",
                "second_value_b"
            ],
            "properties": {
                "first_operator_id": {
                    "type": "integer"
                },
                "second_value_b": {
                    "x-nullable": true,
                    "type": "string"
                },
                "second_operator_id": {
                    "x-nullable": true,
                    "type": "integer"
                },
                "second_value_a": {
                    "x-nullable": true,
                    "type": "string"
                },
                "first_value_b": {
                    "x-nullable": true,
                    "type": "string"
                },
                "first_value_a": {
                    "x-nullable": true,
                    "type": "string"
                },
                "second_configurationkey_id": {
                    "type": "integer"
                },
                "first_configurationkey_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Operator": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "rangeconstraints": {
                    "items": {
                        "$ref": "#/definitions/RangeConstraint"
                    },
                    "type": "array"
                },
                "human_value": {
                    "type": "string"
                },
                "math_value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "client": {
            "allOf": [
                {
                    "$ref": "#/definitions/Newclient"
                }
            ],
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "experimentgroups": {
                    "items": {
                        "$ref": "#/definitions/ExperimentGroup"
                    },
                    "type": "array"
                },
                "dataitems": {
                    "items": {
                        "$ref": "#/definitions/DataItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NewExperiment": {
            "required": [
                "name",
                "application_id",
                "startDatetime",
                "endDatetime"
            ],
            "properties": {
                "startDatetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endDatetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NewApplication": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Experiment": {
            "allOf": [
                {
                    "$ref": "#/definitions/NewExperiment"
                }
            ],
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Newclient": {
            "required": [
                "clientname"
            ],
            "properties": {
                "clientname": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConfigurationKey": {
            "allOf": [
                {
                    "$ref": "#/definitions/NewConfigurationKey"
                }
            ],
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NewRangeConstraint": {
            "required": [
                "value"
            ],
            "properties": {
                "operator_id": {
                    "type": "integer"
                },
                "configurationkey_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Application": {
            "allOf": [
                {
                    "$ref": "#/definitions/NewApplication"
                }
            ],
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "apikey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DataItem": {
            "required": [
                "id"
            ],
            "properties": {
                "value": {
                    "type": [
                        "integer",
                        "string",
                        "boolean"
                    ]
                },
                "key": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "startDateTime": {
                    "type": "string"
                },
                "endDateTime": {
                    "type": "string"
                },
                "client_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ExclusionConstraint": {
            "required": [
                "id",
                "first_configurationkey_id",
                "first_operator_id",
                "first_value_a",
                "first_value_b",
                "second_configurationkey_id",
                "second_operator_id",
                "second_value_a",
                "second_value_b"
            ],
            "properties": {
                "first_operator_id": {
                    "type": "integer"
                },
                "second_value_b": {
                    "x-nullable": true,
                    "type": [
                        "string"
                    ]
                },
                "second_operator_id": {
                    "x-nullable": true,
                    "type": [
                        "integer"
                    ]
                },
                "second_value_a": {
                    "x-nullable": true,
                    "type": [
                        "string"
                    ]
                },
                "first_value_b": {
                    "x-nullable": true,
                    "type": [
                        "string"
                    ]
                },
                "first_value_a": {
                    "x-nullable": true,
                    "type": [
                        "string"
                    ]
                },
                "second_configurationkey_id": {
                    "type": "integer"
                },
                "first_configurationkey_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ExperimentGroup": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "clients": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "experiment_id": {
                    "type": "integer"
                },
                "configurations": {
                    "items": {
                        "$ref": "#/definitions/Configuration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "info": {
        "version": "2.2",
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "title": "Experiment server",
        "description": "API for experiments"
    },
    "schemes": [
        "http"
    ],
    "tags": [
        {
            "name": "client",
            "description": "client-related routes"
        },
        {
            "name": "application",
            "description": "Application-related routes"
        },
        {
            "name": "configuration-keys",
            "description": "Configurations"
        },
        {
            "name": "range-constraints",
            "description": "Range-related routes"
        },
        {
            "name": "exclusion-constraints",
            "description": "Exclusion-related routes"
        },
        {
            "name": "operators",
            "description": "Operator-related routes"
        },
        {
            "name": "experiments",
            "description": "Experiment-related routes"
        }
    ],
    "host": "experiment-server2016.herokuapp.com"
}
