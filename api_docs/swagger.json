{
  "swagger":"2.0",
  "info":{
    "version":"2.5.0",
    "title":"Experiment server",
    "description":"API for experiments",
    "license":{
      "name":"MIT",
      "url":"http://opensource.org/licenses/MIT"
    }
  },
  "host":"experiment-server2016.herokuapp.com",
  "schemes":[
    "http"
  ],
  "produces":[
    "application/json"
  ],
  "consumes":[
    "application/json"
  ],
  "tags":[
    {
      "name":"client",
      "description":"client-related routes"
    },
    {
      "name":"application",
      "description":"Application-related routes"
    },
    {
      "name":"configuration-keys",
      "description":"Configurations"
    },
    {
      "name":"range-constraints",
      "description":"Range-related routes"
    },
    {
      "name":"exclusion-constraints",
      "description":"Exclusion-related routes"
    },
    {
      "name":"operators",
      "description":"Operator-related routes"
    },
    {
      "name":"experiments",
      "description":"Experiment-related routes"
    }
  ],
  "paths":{
    "/logic":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary": "Get all valid experiment distribution strategies",
        "responses":{
          "200":{
            "description":"OK. Should contain at least one strategy",
            "schema":{
              "type": "array",
              "items":{
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/operators":{
      "get":{
        "tags":[
          "operators"
        ],
        "summary":"Get available operators",
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Operator"
              }
            }
          }
        }
      }
    },
    "/configurations":{
      "post":{
        "tags":[
          "client"
        ],
        "summary":"Get configurations for client's application",
        "parameters":[
          {
            "name":"authorization",
            "in":"header",
            "required":true,
            "description":"API-key which identifies application Client belongs to",
            "type":"string"
          },
          {
            "name":"clientname",
            "in":"body",
            "required":true,
            "description":"Name of the client",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Configuration"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          }
        }
      }
    },
    "/events":{
      "post":{
        "tags":[
          "client"
        ],
        "summary":"Clients post their data to this address",
        "parameters":[
          {
            "name":"authorization",
            "in":"header",
            "required":true,
            "description":"API-key which identifies application Client belongs to",
            "type":"string"
          },
          {
            "name":"clientname",
            "in":"header",
            "required":true,
            "description":"name of an existing client",
            "type":"string"
          },
          {
            "name":"dataitem",
            "in":"body",
            "description":"Data-item to save",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewDataItem"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/DataItem"
            }
          },
          "400":{
            "description":"Bad Request. Client is either nonexistent or client is not in any running experiments"
          },
          "401":{
            "description":"Unauthorized. No apikey given to header"
          }
        }
      }
    },
    "/applications":{
      "get":{
        "tags":[
          "application"
        ],
        "summary":"Get all applications",
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Application"
              }
            }
          }
        }
      },
      "post":{
        "tags":[
          "application"
        ],
        "summary":"Create new application",
        "parameters":[
          {
            "name":"application",
            "in":"body",
            "description":"Application to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewApplication"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Application"
            }
          },
          "400":{
            "description":"Bad Request: Invalid Application",
            "schema":{
              "$ref":"#/definitions/Application"
            }
          }
        }
      }
    },
    "/applications/{id}":{
      "get":{
        "tags":[
          "application"
        ],
        "summary":"Get one application",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Application"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "application"
        ],
        "summary":"Delete one application",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "put":{
        "tags":[
          "application"
        ],
        "summary":"Update one Application. So far, only changeable field is name",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"application",
            "in":"body",
            "description":"Application to modify",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Application"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Application"
            }
          },
          "400":{
            "description":"Bad Request. Either ids didn't match between given application and path, application does not exist with given id or given Application was invalid"
          }
        }
      }
    },
    "/applications/{id}/data":{
      "get":{
        "tags":[
          "application"
        ],
        "summary":"Get all configurationkeys and rangeconstraints of one application",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"object",
              "allOf":[
                {
                  "$ref":"#/definitions/Application"
                }
              ],
              "properties":{
                "exclusionconstraints":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/ExclusionConstraint"
                  }
                },
                "rangeconstraints":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/RangeConstraint"
                  }
                },
                "configurationkeys":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/ConfigurationKey"
                  }
                }
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/clients":{
      "get":{
        "tags":[
          "client"
        ],
        "summary":"Get all clients",
        "description":"Gets all clients from the database",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/client"
              }
            }
          }
        }
      },
      "post":{
        "tags":[
          "client"
        ],
        "summary":"Create new client",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          },
          {
            "name":"client",
            "in":"body",
            "description":"client to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Newclient"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/client"
            }
          }
        }
      }
    },
    "/applications/{appid}/clients/{clientid}":{
      "get":{
        "tags":[
          "client"
        ],
        "summary":"Get one client",
        "parameters":[
          {
            "name":"clientid",
            "type":"integer",
            "description":"id of the client",
            "in":"path",
            "required":true
          },
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/client"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "client"
        ],
        "summary":"Delete one client",
        "parameters":[
          {
            "name":"clientid",
            "type":"integer",
            "description":"id of the client",
            "in":"path",
            "required":true
          },
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          }
        }
      }
    },
    "/applications/{appid}/clients/{clientid}/configurations":{
      "get":{
        "tags":[
          "client"
        ],
        "summary":"Get clients currenct configurations",
        "parameters":[
          {
            "name":"clientid",
            "type":"integer",
            "description":"id of the client",
            "in":"path",
            "required":true
          },
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Configuration"
              }
            }
          }
        }
      }
    },
    "/applications/{appid}/clients/{clientid}/experiments":{
      "get":{
        "tags":[
          "client"
        ],
        "summary":"Get clients current experiments",
        "parameters":[
          {
            "name":"clientid",
            "type":"integer",
            "description":"id of the client",
            "in":"path",
            "required":true
          },
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Experiment"
              }
            }
          }
        }
      }
    },
    "/applications/{appid}/exclusionconstraints":{
      "get":{
        "tags":[
          "exclusion-constraints"
        ],
        "summary":"Get exclusionconstraints of one application",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/ExclusionConstraint"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "post":{
        "tags":[
          "exclusion-constraints"
        ],
        "summary":"Create new exclusionconstraint to application",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"exclusionconstraint",
            "in":"body",
            "description":"exclusionconstraint to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewExclusionConstraint"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ExclusionConstraint"
            }
          }
        }
      }
    },
    "/applications/{appid}/exclusionconstraints/{ecid}":{
      "get":{
        "tags":[
          "exclusion-constraints"
        ],
        "summary":"Get one exclusionconstraint",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ecid",
            "type":"integer",
            "description":"id of the exclusionconstraint",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ExclusionConstraint"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "exclusion-constraints"
        ],
        "summary":"Delete one exclusionconstraint",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ecid",
            "type":"integer",
            "description":"id of the exclusionconstraint",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{id}/configurationkeys":{
      "get":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Get configurationkeys of one application",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/ConfigurationKey"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "post":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Create new configuration-key",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          },
          {
            "name":"configurationkey",
            "in":"body",
            "description":"Conf.key to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewConfigurationKey"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ConfigurationKey"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Delete all configuration-keys of one app",
        "parameters":[
          {
            "name":"id",
            "type":"integer",
            "description":"id of the application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/configurationkeys/{ckid}":{
      "get":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Get one configurationkey",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ConfigurationKey"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "put":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Modify excisting configuration key",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          },
          {
            "name":"configurationkey",
            "in":"body",
            "description":"Configurationkey to modify",
            "required":true,
            "schema":{
              "$ref":"#/definitions/ConfigurationKey"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ConfigurationKey"
            }
          },
          "400":{
            "description":"Bad Request: Invalid ConfigurationKey"
          }
        }
      },
      "delete":{
        "tags":[
          "configuration-keys"
        ],
        "summary":"Delete one configurationkey",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/configurationkeys/{ckid}/rangeconstraints":{
      "get":{
        "tags":[
          "range-constraints"
        ],
        "summary":"Get rangeconstraints of one configurationkey",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/RangeConstraint"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "range-constraints"
        ],
        "summary":"Delete all rangeconstraints of one configurationkey",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "post":{
        "tags":[
          "range-constraints"
        ],
        "summary":"Create new rangeconstraint",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          },
          {
            "name":"rangeconstraint",
            "in":"body",
            "description":"Rangeconstraint to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewRangeConstraint"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/RangeConstraint"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/configurationkeys/{ckid}/rangeconstraints/{rcid}":{
      "delete":{
        "tags":[
          "range-constraints"
        ],
        "summary":"Delete one rangeconstraint",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"ckid",
            "type":"integer",
            "description":"id of the configurationkey",
            "in":"path",
            "required":true
          },
          {
            "name":"rcid",
            "type":"integer",
            "description":"id of the rangeconstraint",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary":"List all experiments",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Experiment"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "post":{
        "tags":[
          "experiments"
        ],
        "summary":"Create new experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"experiment",
            "in":"body",
            "description":"Experiment to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/NewExperiment"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Experiment"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary":"Get one experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Experiment"
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "experiments"
        ],
        "summary":"Delete one experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}/clients":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary":"List all clients for one experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/client"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}/experimentgroups":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary":"List experimentgroups of one Experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"Id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"Id of the Experiment",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/ExperimentGroup"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}/experimentgroups/{expgroupid}":{
      "get":{
        "tags":[
          "experiments"
        ],
        "summary":"Show one experimentgroup metadata. This is intended to be used as interface for analytic tools.",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          },
          {
            "name":"expgroupid",
            "type":"integer",
            "description":"id of the experimentgroup",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"object",
              "properties":{
                "experimentgroup":{
                  "type":"object",
                  "items":{
                    "$ref":"#/definitions/ExperimentGroup"
                  }
                },
                "configurations":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/Configuration"
                  }
                },
                "clients":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/client"
                  }
                },
                "dataitems":{
                  "type":"array",
                  "items":{
                    "$ref":"#/definitions/DataItem"
                  }
                }
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "delete":{
        "tags":[
          "experiments"
        ],
        "summary":"Delete experimentgroup from one experiment",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          },
          {
            "name":"expgroupid",
            "type":"integer",
            "description":"id of the experimentgroup",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}/experimentgroups/{expgroupid}/configurations":{
      "get":{
        "tags":[
          "experiments",
          "configurations"
        ],
        "summary":"Get ExperimentGroup configurations",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          },
          {
            "name":"expgroupid",
            "type":"integer",
            "description":"id of the experimentgroup",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Configuration"
              }
            }
          },
          "400":{
            "description":"Bad Request"
          }
        }
      },
      "post":{
        "tags":[
          "experiments",
          "configurations"
        ],
        "summary":"Create configuration to ExperimentGroup",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          },
          {
            "name":"expgroupid",
            "type":"integer",
            "description":"id of the experimentgroup",
            "in":"path",
            "required":true
          },
          {
            "name":"configuration",
            "in":"body",
            "description":"Configuration to create",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Configuration"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    },
    "/applications/{appid}/experiments/{expid}/experimentgroups/{expgroupid}/configurations/{confid}":{
      "delete":{
        "tags":[
          "experiments",
          "configurations"
        ],
        "summary":"Delete Configuration from ExperimentGroup",
        "parameters":[
          {
            "name":"appid",
            "type":"integer",
            "description":"id of the Application",
            "in":"path",
            "required":true
          },
          {
            "name":"expid",
            "type":"integer",
            "description":"id of the experiment",
            "in":"path",
            "required":true
          },
          {
            "name":"expgroupid",
            "type":"integer",
            "description":"id of the experimentgroup",
            "in":"path",
            "required":true
          },
          {
            "name":"confid",
            "type":"integer",
            "description":"id of the configuration to be deleted",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          }
        }
      }
    }
  },
  "definitions":{
    "Application":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/NewApplication"
        }
      ],
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "apikey":{
          "type":"string"
        }
      }
    },
    "NewApplication":{
      "type":"object",
      "required":[
        "name"
      ],
      "properties":{
        "name":{
          "type":"string"
        },
        "experiment_distribution":{
          "type":"string"
        }
      }
    },
    "ConfigurationKey":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/NewConfigurationKey"
        }
      ],
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        }
      }
    },
    "NewConfigurationKey":{
      "type":"object",
      "required":[
        "name",
        "type",
        "application_id"
      ],
      "properties":{
        "name":{
          "type":"string"
        },
        "type":{
          "type":"string"
        },
        "application_id":{
          "type":"integer"
        }
      }
    },
    "Configuration":{
      "type":"object",
      "required":[
        "experimentgroup_id",
        "key",
        "value"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "experimentgroup_id":{
          "type":"integer"
        },
        "key":{
          "type":"string"
        },
        "value":{
          "type":[
            "integer",
            "string",
            "boolean"
          ]
        }
      }
    },
    "NewDataItem":{
      "type":"object",
      "required":[
        "key",
        "value",
        "startDatetime",
        "endDatetime"
      ],
      "properties":{
        "key":{
          "type":"string"
        },
        "value":{
          "type":"string"
        },
        "startDatetime":{
          "type":"string"
        },
        "endDatetime":{
          "type":"string"
        }
      }
    },
    "DataItem":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/NewDataItem"
        }
      ],
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "client_id":{
          "type":"integer"
        }
      }
    },
    "ExclusionConstraint":{
      "type":"object",
      "required":[
        "id",
        "first_configurationkey_id",
        "first_operator_id",
        "first_value",
        "second_configurationkey_id",
        "second_operator_id",
        "second_value"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "first_configurationkey_id":{
          "type":"integer"
        },
        "first_operator_id":{
          "type":"integer"
        },
        "first_value":{
          "type":"array",
          "items":{

          },
          "x-nullable":true
        },
        "second_configurationkey_id":{
          "type":"integer"
        },
        "second_operator_id":{
          "type":[
            "integer"
          ],
          "x-nullable":true
        },
        "second_value":{
          "type":"array",
          "items":{

          },
          "x-nullable":true
        }
      }
    },
    "NewExclusionConstraint":{
      "type":"object",
      "required":[
        "first_operator_id",
        "first_value",
        "second_configurationkey_id",
        "second_operator_id",
        "second_value"
      ],
      "properties":{
        "first_configurationkey_id":{
          "type":"integer"
        },
        "first_operator_id":{
          "type":"integer"
        },
        "first_value":{
          "type":"array",
          "items":{

          },
          "x-nullable":true
        },
        "second_configurationkey_id":{
          "type":"integer"
        },
        "second_operator_id":{
          "type":"integer",
          "x-nullable":true
        },
        "second_value":{
          "type":"array",
          "items":{

          },
          "x-nullable":true
        }
      }
    },
    "ExperimentGroup":{
      "type":"object",
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "experiment_id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "configurations":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Configuration"
          }
        },
        "clients":{
          "type":"integer"
        }
      }
    },
    "Experiment":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/NewExperiment"
        }
      ],
      "required":[
        "id",
        "status"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "status":{
          "type":"string"
        }
      }
    },
    "NewExperiment":{
      "type":"object",
      "required":[
        "name",
        "application_id",
        "startDatetime",
        "endDatetime"
      ],
      "properties":{
        "application_id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "startDatetime":{
          "type":"string",
          "format":"date-time"
        },
        "endDatetime":{
          "type":"string",
          "format":"date-time"
        }
      }
    },
    "Operator":{
      "type":"object",
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "math_value":{
          "type":"string"
        },
        "human_value":{
          "type":"string"
        },
        "rangeconstraints":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/RangeConstraint"
          }
        }
      }
    },
    "RangeConstraint":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/NewRangeConstraint"
        }
      ],
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        }
      }
    },
    "NewRangeConstraint":{
      "type":"object",
      "required":[
        "value"
      ],
      "properties":{
        "configurationkey_id":{
          "type":"integer"
        },
        "operator_id":{
          "type":"integer"
        },
        "value":{
          "type":"string"
        }
      }
    },
    "client":{
      "type":"object",
      "allOf":[
        {
          "$ref":"#/definitions/Newclient"
        }
      ],
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "dataitems":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/DataItem"
          }
        },
        "experimentgroups":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ExperimentGroup"
          }
        }
      }
    },
    "Newclient":{
      "type":"object",
      "required":[
        "clientname"
      ],
      "properties":{
        "clientname":{
          "type":"string"
        }
      }
    }
  }
}